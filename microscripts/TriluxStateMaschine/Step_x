# Step x - COMMENT
sub Step_x
	# Declare Persistent Variables
	persistent $LedStart = 0
	persistent $LedStopp = 0
	persistent $LedCalibrate = 0
	persistent $ButtonStart = 0
	persistent $ButtonStopp = 0
	persistent $ButtonCalibrate = 0
	persistent $StepStateMachine = 1
	persistent $OpStateSLC = 0
    persistent $CalPower = 0
    persistent $MAC = "00:00:00:00:00:00"
    persistent $CalValue = 0
	persistent $BTN_PWR1 = 0
	persistent $BTN_PWR2 = 0
	persistent $BTN_PWR3 = 0
	persistent $BTN_PWR4 = 0
	persistent $SLD_PWR1 = 3000
	persistent $SLD_PWR2 = 5000
	persistent $SLD_PWR3 = 25000
	persistent $SLD_PWR4 = 50000
	persistent $BTN_Cal = 0
	persistent $BTN_Start = 0
	persistent $BTN_Stop = 0
	persistent $P_Step = "xxx"
	persistent $P_Message = "xxx"
	persistent $P_Progress = "xxx"
	persistent $Reset = 0

	# Switch On Output
	echo console on
    $StepStateMachine = x
	$P_Step = "Step " {$StepStateMachine} " - text"
	$P_Message = "helping text"

    # Do
    
    # Next Step
	console "StateMachine - Step " $StepStateMachine
	gosub input
	if $ButtonStopp <> 1 or $BTN_Stop == 1
		$StepStateMachine == 0
	    console "StateMachine - Stopp Button pressed"
		$P_Message = "Stop Button pressed - Exit Cycle"
	elseif $Reset == 1
		$CalPower = 0
		console "StateMachine - GUI Reset Button"
	elseif 
		$StepStateMachine == xx
		console "StateMachine - "
		$P_Message = " "
	endif

    # Jump
    gosub output
    select $StepStateMachine
    case x
		start timer "StateMachine" in "1s" StateMachine:Step_x
        console " StateMachine - wait for change"
		$P_Message = "wait for User Input"
	case *
		$StepStateMachine = 0
		start timer "StateMachine" in "1s" StateMachine
		$P_Message = "undefined Jump to Step - Restart StateMachine"
	endselect
endsub